# coding: utf-8

"""
    pay.buybtc123.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from buybtcpay.models.palm_pay_virtual_account_order_query import PalmPayVirtualAccountOrderQuery

class TestPalmPayVirtualAccountOrderQuery(unittest.TestCase):
    """PalmPayVirtualAccountOrderQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PalmPayVirtualAccountOrderQuery:
        """Test PalmPayVirtualAccountOrderQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PalmPayVirtualAccountOrderQuery`
        """
        model = PalmPayVirtualAccountOrderQuery()
        if include_optional:
            return PalmPayVirtualAccountOrderQuery(
                id = '',
                order_by_create_at = '',
                create_at_since = '',
                create_at_until = '',
                order_no = '',
                order_status = 0,
                order_created_time_since = '',
                order_created_time_until = '',
                currency = 'NGN',
                order_amount = [
                    '1000,2000,3000'
                    ],
                reference = '',
                payer_account_no = '',
                payer_account_name = '',
                payer_bank_name = '',
                virtual_account_no = '',
                virtual_account_name = ''
            )
        else:
            return PalmPayVirtualAccountOrderQuery(
        )
        """

    def testPalmPayVirtualAccountOrderQuery(self):
        """Test PalmPayVirtualAccountOrderQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
