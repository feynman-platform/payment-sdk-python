# coding: utf-8

"""
    pay.buybtc123.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from buybtcpay.models.buy_btc_response_merchant_recharge_entity import BuyBtcResponseMerchantRechargeEntity

class TestBuyBtcResponseMerchantRechargeEntity(unittest.TestCase):
    """BuyBtcResponseMerchantRechargeEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuyBtcResponseMerchantRechargeEntity:
        """Test BuyBtcResponseMerchantRechargeEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuyBtcResponseMerchantRechargeEntity`
        """
        model = BuyBtcResponseMerchantRechargeEntity()
        if include_optional:
            return BuyBtcResponseMerchantRechargeEntity(
                code = '',
                message = '',
                detail = '',
                data = buybtcpay.models.merchant_recharge_entity.MerchantRechargeEntity(
                    id = '', 
                    create_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    approval_status = 0, 
                    merchant = buybtcpay.models.merchant_entity.MerchantEntity(
                        id = '', 
                        create_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        merchant_id = '', 
                        public_key = '', 
                        name = '', 
                        email = '', 
                        role = 0, 
                        merchant_status = 0, 
                        palm_pay_virtual_account_no = '', 
                        note = '', 
                        virtual_account_id = 56, 
                        tag = '', 
                        version = 56, ), 
                    value = 56, 
                    note = '', 
                    message = '', 
                    approval_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return BuyBtcResponseMerchantRechargeEntity(
        )
        """

    def testBuyBtcResponseMerchantRechargeEntity(self):
        """Test BuyBtcResponseMerchantRechargeEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
