# coding: utf-8

"""
    pay.buybtc123.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from buybtcpay.models.pay_pagination_virtual_account_entity import PayPaginationVirtualAccountEntity

class TestPayPaginationVirtualAccountEntity(unittest.TestCase):
    """PayPaginationVirtualAccountEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayPaginationVirtualAccountEntity:
        """Test PayPaginationVirtualAccountEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayPaginationVirtualAccountEntity`
        """
        model = PayPaginationVirtualAccountEntity()
        if include_optional:
            return PayPaginationVirtualAccountEntity(
                total = 56,
                current = 56,
                size = 56,
                pages = 56,
                latest = True,
                data = [
                    buybtcpay.models.virtual_account_entity.VirtualAccountEntity(
                        id = '', 
                        create_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        external_id = '', 
                        note = '', 
                        account_merchant = buybtcpay.models.merchant_entity.MerchantEntity(
                            id = '', 
                            create_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            merchant_id = '', 
                            public_key = '', 
                            name = '', 
                            email = '', 
                            role = 0, 
                            merchant_status = 0, 
                            palm_pay_virtual_account_no = '', 
                            note = '', 
                            virtual_account_id = 56, 
                            virtual_account_id_backup = 56, 
                            tag = '', 
                            version = 56, ), 
                        merchant_id = '', 
                        parent_merchant_id = '', )
                    ]
            )
        else:
            return PayPaginationVirtualAccountEntity(
        )
        """

    def testPayPaginationVirtualAccountEntity(self):
        """Test PayPaginationVirtualAccountEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
