# coding: utf-8

"""
    pay.buybtc123.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from buybtcpay.models.pay_response_merchant_entity_dto import PayResponseMerchantEntityDto

class TestPayResponseMerchantEntityDto(unittest.TestCase):
    """PayResponseMerchantEntityDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayResponseMerchantEntityDto:
        """Test PayResponseMerchantEntityDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayResponseMerchantEntityDto`
        """
        model = PayResponseMerchantEntityDto()
        if include_optional:
            return PayResponseMerchantEntityDto(
                message = '',
                success = True,
                status = '200',
                data = buybtcpay.models.merchant_entity_dto.MerchantEntityDto(
                    id = 56, 
                    create_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 0, 
                    merchant_id = '', 
                    public_key = '', 
                    name = '', 
                    email = '', 
                    role = 0, 
                    merchant_status = 0, 
                    palm_pay_virtual_account_no = '', 
                    note = '', 
                    tag = '', 
                    virtual_account_id = 56, )
            )
        else:
            return PayResponseMerchantEntityDto(
        )
        """

    def testPayResponseMerchantEntityDto(self):
        """Test PayResponseMerchantEntityDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
