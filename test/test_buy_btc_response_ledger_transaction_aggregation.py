# coding: utf-8

"""
    pay.buybtc123.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from buybtcpay.models.buy_btc_response_ledger_transaction_aggregation import BuyBtcResponseLedgerTransactionAggregation

class TestBuyBtcResponseLedgerTransactionAggregation(unittest.TestCase):
    """BuyBtcResponseLedgerTransactionAggregation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuyBtcResponseLedgerTransactionAggregation:
        """Test BuyBtcResponseLedgerTransactionAggregation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuyBtcResponseLedgerTransactionAggregation`
        """
        model = BuyBtcResponseLedgerTransactionAggregation()
        if include_optional:
            return BuyBtcResponseLedgerTransactionAggregation(
                code = '',
                message = '',
                detail = '',
                data = buybtcpay.models.ledger_transaction_aggregation.LedgerTransactionAggregation(
                    data = buybtcpay.models.pay_pagination_ledger_transaction_entity.PayPaginationLedgerTransactionEntity(
                        total = 56, 
                        current = 56, 
                        size = 56, 
                        pages = 56, 
                        latest = True, ), 
                    total_amount = '', )
            )
        else:
            return BuyBtcResponseLedgerTransactionAggregation(
        )
        """

    def testBuyBtcResponseLedgerTransactionAggregation(self):
        """Test BuyBtcResponseLedgerTransactionAggregation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
