# coding: utf-8

"""
    pay.buybtc123.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from buybtcpay.models.pay_pagination_query_merchant_wallet_query import PayPaginationQueryMerchantWalletQuery

class TestPayPaginationQueryMerchantWalletQuery(unittest.TestCase):
    """PayPaginationQueryMerchantWalletQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayPaginationQueryMerchantWalletQuery:
        """Test PayPaginationQueryMerchantWalletQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayPaginationQueryMerchantWalletQuery`
        """
        model = PayPaginationQueryMerchantWalletQuery()
        if include_optional:
            return PayPaginationQueryMerchantWalletQuery(
                current = 1,
                size = 1,
                query = buybtcpay.models.merchant_wallet_query.MerchantWalletQuery(
                    id = '', 
                    order_by_create_at = '', 
                    create_at_since = '', 
                    create_at_until = '', 
                    merchant_id = '', 
                    currency = 'NGN', 
                    tag = [
                        ''
                        ], )
            )
        else:
            return PayPaginationQueryMerchantWalletQuery(
        )
        """

    def testPayPaginationQueryMerchantWalletQuery(self):
        """Test PayPaginationQueryMerchantWalletQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
